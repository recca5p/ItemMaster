services:
  mysql:
    image: mysql:8.0
    container_name: itemmaster-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: item_master
      MYSQL_USER: im_user
      MYSQL_PASSWORD: im_pass
    ports:
      - "3306:3306"
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -prootpass || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10

  mock-snowflake:
    image: postgres:15
    container_name: itemmaster-mock-snowflake
    restart: unless-stopped
    environment:
      POSTGRES_DB: snowflake
      POSTGRES_USER: snow_user
      POSTGRES_PASSWORD: snow_pass
    ports:
      - "5432:5432"
    volumes:
      - ./mock-snowflake-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U snow_user -d snowflake" ]
      interval: 10s
      timeout: 5s
      retries: 10

  localstack:
    image: localstack/localstack:latest
    container_name: itemmaster-localstack
    restart: unless-stopped
    environment:
      SERVICES: sqs,secretsmanager,cloudwatch
      AWS_DEFAULT_REGION: ap-southeast-1
      DEBUG: "1"
      LS_LOG: warning
      DOCKER_HOST: unix:///var/run/docker.sock
    ports:
      - "4566:4566"
      - "4571:4571"
    volumes:
      - "./.localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:4566/_localstack/health || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 15

  localstack-init:
    image: amazon/aws-cli:2.15.30
    container_name: itemmaster-localstack-init
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: ap-southeast-1
    entrypoint: /bin/sh
    command: -c "set -e; echo 'Waiting for LocalStack...'; until curl -s http://localstack:4566/_localstack/health | grep -q 'sqs.*available'; do sleep 3; done; echo 'Creating SQS queue im-dev-item-master-queue'; aws --endpoint-url=http://localstack:4566 sqs create-queue --queue-name im-dev-item-master-queue --region ap-southeast-1 || echo 'Queue might already exist'; echo 'Creating MySQL secret'; aws --endpoint-url=http://localstack:4566 secretsmanager create-secret --name test/mysql-secret --secret-string '{\"username\":\"im_user\",\"password\":\"im_pass\",\"host\":\"mysql\",\"port\":3306,\"database\":\"item_master\"}' --region ap-southeast-1 || echo 'Secret might already exist'; echo 'Setup complete';"
